{
  "dependencies": {
  },
  "devDependencies": {
    "bash-language-server": "^1.6.1",
    "dockerfile-language-server-nodejs": "^0.0.22",
    "eslint": "^5.16.0",
    "eslint-config-prettier": "^4.1.0",
    "eslint-plugin-prettier": "^3.0.1",
    "husky": "^3.0.9",
    "javascript-typescript-langserver": "^2.11.3",
    "lerna": "^3.13.2",
    "precise-commits": "^1.0.2",
    "prettier": "^1.19.1",
    "tslint-config-prettier": "^1.18.0",
    "tslint-plugin-prettier": "^2.0.1",
    "tslint-react": "^4.0.0",
    "tslint": "^5.15.0",
    "typescript": "^4.0.0",
    "unified-language-server": "^0.3.0",
    "vscode-css-languageserver-bin": "^1.4.0",
    "vscode-html-languageserver-bin": "^1.4.0",
    "vscode-json-languageserver-bin": "^1.0.1",
    "yaml-language-server": "^0.4.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "precise-commits"
    }
  },
  "prettier": {
    "singleQuote": true
  },
  "private": true,
  "scripts": {
    "bootstrap": "jlpm --no-optional --prefer-offline && lerna bootstrap && jlpm lint && jlpm clean && jlpm build",
    "build": "jlpm build:schema && jlpm build:meta && jlpm build:ws",
    "build:schema": "lerna run build:schema --stream",
    "build:meta": "lerna run build --stream --scope @kiteco/jupyterlab-kite-metapackage",
    "build:ws": "lerna run build --stream --scope lsp-ws-connection",
    "watch": "lerna run --parallel watch",
    "bundle": "lerna run --parallel bundle",
    "clean": "lerna run --parallel clean",
    "lab:link": "lerna run lab:link",
    "lint:check": "jlpm prettier:check && jlpm tslint:check",
    "lint": "jlpm prettier && jlpm tslint",
    "prettier:check": "prettier --check '**/*{.ts,.tsx,.js,.jsx,.css,.json,.md,.yml}'",
    "test": "lerna run --stream --concurrency=1 test",
    "prettier": "prettier --write '**/*{.ts,.tsx,.js,.jsx,.css,.json,.md,.yml}'",
    "tslint": "tslint --fix -c ./packages/tslint.json --project ./packages/tsconfigbase.json 'packages/**/*{.ts,.tsx}'",
    "tslint:check": "tslint -c ./packages/tslint.json --project ./packages/tsconfigbase.json 'packages/**/*{.ts,.tsx}'"
  },
  "workspaces": {
    "packages": [
      "packages/*"
    ],
    "nohoist": [
      "**/@types/jest",
      "**/@types/jest/**",
      "**/@types/mocha/",
      "**/@types/mocha/**",
      "**/@types/expect/",
      "**/@types/expect/**",
      "**/@types/sinon/",
      "**/@types/sinon/**"
    ]
  }
}
